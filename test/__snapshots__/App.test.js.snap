// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AddTemp should match snapshot 1`] = `
<AddTemperature
  addMachineTemp={[Function]}
  handleChange={[Function]}
  machines={
    Object {
      "IDX11111": Object {
        "average": 0,
        "name": "Jhon",
        "numAdded": 0,
        "temperature": 0,
        "units": 0,
      },
      "IDX12345": Object {
        "average": 13,
        "name": "Karam",
        "numAdded": 1,
        "temperature": 0,
        "units": 13,
      },
      "IDX2222": Object {
        "average": 0,
        "name": "Vemly",
        "numAdded": 0,
        "temperature": 0,
        "units": 0,
      },
    }
  }
  tempId=""
  temperature=""
>
  <div
    style={
      Object {
        "marginTop": 20,
      }
    }
  >
    <h4>
      Add Temperature
    </h4>
    <div>
      <WithStyles(FormControl)
        required={true}
        style={
          Object {
            "minWidth": "20%",
          }
        }
      >
        <FormControl
          classes={
            Object {
              "fullWidth": "MuiFormControl-fullWidth-85",
              "marginDense": "MuiFormControl-marginDense-84",
              "marginNormal": "MuiFormControl-marginNormal-83",
              "root": "MuiFormControl-root-82",
            }
          }
          component="div"
          disabled={false}
          error={false}
          fullWidth={false}
          margin="none"
          required={true}
          style={
            Object {
              "minWidth": "20%",
            }
          }
        >
          <div
            className="MuiFormControl-root-82"
            style={
              Object {
                "minWidth": "20%",
              }
            }
          >
            <WithStyles(InputLabel)
              htmlFor="temperature"
            >
              <InputLabel
                classes={
                  Object {
                    "animated": "MuiInputLabel-animated-90",
                    "formControl": "MuiInputLabel-formControl-87",
                    "marginDense": "MuiInputLabel-marginDense-88",
                    "root": "MuiInputLabel-root-86",
                    "shrink": "MuiInputLabel-shrink-89",
                  }
                }
                disableAnimation={false}
                htmlFor="temperature"
              >
                <WithStyles(FormLabel)
                  className="MuiInputLabel-root-86 MuiInputLabel-formControl-87 MuiInputLabel-animated-90"
                  data-shrink={false}
                  htmlFor="temperature"
                >
                  <FormLabel
                    className="MuiInputLabel-root-86 MuiInputLabel-formControl-87 MuiInputLabel-animated-90"
                    classes={
                      Object {
                        "asterisk": "MuiFormLabel-asterisk-97",
                        "disabled": "MuiFormLabel-disabled-93",
                        "error": "MuiFormLabel-error-94",
                        "filled": "MuiFormLabel-filled-95",
                        "focused": "MuiFormLabel-focused-92",
                        "required": "MuiFormLabel-required-96",
                        "root": "MuiFormLabel-root-91",
                      }
                    }
                    component="label"
                    data-shrink={false}
                    htmlFor="temperature"
                  >
                    <label
                      className="MuiFormLabel-root-91 MuiFormLabel-required-96 MuiInputLabel-root-86 MuiInputLabel-formControl-87 MuiInputLabel-animated-90"
                      data-shrink={false}
                      htmlFor="temperature"
                    >
                      Temperature
                      <span
                        className="MuiFormLabel-asterisk-97"
                      >
                        â€‰*
                      </span>
                    </label>
                  </FormLabel>
                </WithStyles(FormLabel)>
              </InputLabel>
            </WithStyles(InputLabel)>
            <WithStyles(Select)
              inputProps={
                Object {
                  "name": "temperature",
                }
              }
              onChange={[Function]}
              style={
                Object {
                  "marginLeft": 0,
                  "marginRight": 10,
                }
              }
              value=""
            >
              <Select
                IconComponent={[Function]}
                autoWidth={false}
                classes={
                  Object {
                    "disabled": "MuiSelect-disabled-101",
                    "icon": "MuiSelect-icon-102",
                    "root": "MuiSelect-root-98",
                    "select": "MuiSelect-select-99",
                    "selectMenu": "MuiSelect-selectMenu-100",
                  }
                }
                displayEmpty={false}
                input={<WithStyles(Input) />}
                inputProps={
                  Object {
                    "name": "temperature",
                  }
                }
                multiple={false}
                native={false}
                onChange={[Function]}
                style={
                  Object {
                    "marginLeft": 0,
                    "marginRight": 10,
                  }
                }
                value=""
              >
                <WithStyles(Input)
                  inputComponent={[Function]}
                  inputProps={
                    Object {
                      "IconComponent": [Function],
                      "MenuProps": undefined,
                      "SelectDisplayProps": undefined,
                      "autoWidth": false,
                      "children": Array [
                        <WithStyles(MenuItem)
                          value=""
                        >
                          <em>
                            None
                          </em>
                        </WithStyles(MenuItem)>,
                        Array [
                          <WithStyles(MenuItem)
                            value="IDX12345"
                          >
                            IDX12345
                          </WithStyles(MenuItem)>,
                          <WithStyles(MenuItem)
                            value="IDX11111"
                          >
                            IDX11111
                          </WithStyles(MenuItem)>,
                          <WithStyles(MenuItem)
                            value="IDX2222"
                          >
                            IDX2222
                          </WithStyles(MenuItem)>,
                        ],
                      ],
                      "classes": Object {
                        "disabled": "MuiSelect-disabled-101",
                        "icon": "MuiSelect-icon-102",
                        "root": "MuiSelect-root-98",
                        "select": "MuiSelect-select-99",
                        "selectMenu": "MuiSelect-selectMenu-100",
                      },
                      "displayEmpty": false,
                      "multiple": false,
                      "name": "temperature",
                      "onClose": undefined,
                      "onOpen": undefined,
                      "open": undefined,
                      "renderValue": undefined,
                      "type": undefined,
                    }
                  }
                  onChange={[Function]}
                  style={
                    Object {
                      "marginLeft": 0,
                      "marginRight": 10,
                    }
                  }
                  value=""
                >
                  <Input
                    classes={
                      Object {
                        "disabled": "MuiInput-disabled-106",
                        "error": "MuiInput-error-108",
                        "focused": "MuiInput-focused-105",
                        "formControl": "MuiInput-formControl-104",
                        "fullWidth": "MuiInput-fullWidth-110",
                        "input": "MuiInput-input-111",
                        "inputMarginDense": "MuiInput-inputMarginDense-112",
                        "inputMultiline": "MuiInput-inputMultiline-113",
                        "inputType": "MuiInput-inputType-114",
                        "inputTypeSearch": "MuiInput-inputTypeSearch-115",
                        "multiline": "MuiInput-multiline-109",
                        "root": "MuiInput-root-103",
                        "underline": "MuiInput-underline-107",
                      }
                    }
                    disableUnderline={false}
                    fullWidth={false}
                    inputComponent={[Function]}
                    inputProps={
                      Object {
                        "IconComponent": [Function],
                        "MenuProps": undefined,
                        "SelectDisplayProps": undefined,
                        "autoWidth": false,
                        "children": Array [
                          <WithStyles(MenuItem)
                            value=""
                          >
                            <em>
                              None
                            </em>
                          </WithStyles(MenuItem)>,
                          Array [
                            <WithStyles(MenuItem)
                              value="IDX12345"
                            >
                              IDX12345
                            </WithStyles(MenuItem)>,
                            <WithStyles(MenuItem)
                              value="IDX11111"
                            >
                              IDX11111
                            </WithStyles(MenuItem)>,
                            <WithStyles(MenuItem)
                              value="IDX2222"
                            >
                              IDX2222
                            </WithStyles(MenuItem)>,
                          ],
                        ],
                        "classes": Object {
                          "disabled": "MuiSelect-disabled-101",
                          "icon": "MuiSelect-icon-102",
                          "root": "MuiSelect-root-98",
                          "select": "MuiSelect-select-99",
                          "selectMenu": "MuiSelect-selectMenu-100",
                        },
                        "displayEmpty": false,
                        "multiple": false,
                        "name": "temperature",
                        "onClose": undefined,
                        "onOpen": undefined,
                        "open": undefined,
                        "renderValue": undefined,
                        "type": undefined,
                      }
                    }
                    multiline={false}
                    onChange={[Function]}
                    style={
                      Object {
                        "marginLeft": 0,
                        "marginRight": 10,
                      }
                    }
                    type="text"
                    value=""
                  >
                    <div
                      className="MuiInput-root-103 MuiInput-formControl-104 MuiInput-underline-107"
                      style={
                        Object {
                          "marginLeft": 0,
                          "marginRight": 10,
                        }
                      }
                    >
                      <SelectInput
                        IconComponent={[Function]}
                        aria-invalid={false}
                        autoWidth={false}
                        className="MuiInput-input-111"
                        classes={
                          Object {
                            "disabled": "MuiSelect-disabled-101",
                            "icon": "MuiSelect-icon-102",
                            "root": "MuiSelect-root-98",
                            "select": "MuiSelect-select-99",
                            "selectMenu": "MuiSelect-selectMenu-100",
                          }
                        }
                        disabled={false}
                        displayEmpty={false}
                        inputRef={[Function]}
                        multiple={false}
                        name="temperature"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        required={true}
                        value=""
                      >
                        <div
                          className="MuiSelect-root-98"
                        >
                          <div
                            aria-haspopup="true"
                            aria-owns={null}
                            aria-pressed="false"
                            className="MuiSelect-select-99 MuiSelect-selectMenu-100 MuiInput-input-111"
                            onBlur={[Function]}
                            onClick={[Function]}
                            onFocus={[Function]}
                            onKeyDown={[Function]}
                            role="button"
                            tabIndex={0}
                          >
                            <span
                              dangerouslySetInnerHTML={
                                Object {
                                  "__html": "&#8203;",
                                }
                              }
                            />
                          </div>
                          <input
                            name="temperature"
                            type="hidden"
                            value=""
                          />
                          <pure(ArrowDropDown)
                            className="MuiSelect-icon-102"
                          >
                            <ArrowDropDown
                              className="MuiSelect-icon-102"
                            >
                              <WithStyles(SvgIcon)
                                className="MuiSelect-icon-102"
                              >
                                <SvgIcon
                                  className="MuiSelect-icon-102"
                                  classes={
                                    Object {
                                      "colorAction": "MuiSvgIcon-colorAction-119",
                                      "colorDisabled": "MuiSvgIcon-colorDisabled-121",
                                      "colorError": "MuiSvgIcon-colorError-120",
                                      "colorPrimary": "MuiSvgIcon-colorPrimary-117",
                                      "colorSecondary": "MuiSvgIcon-colorSecondary-118",
                                      "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-122",
                                      "root": "MuiSvgIcon-root-116",
                                    }
                                  }
                                  color="inherit"
                                  component="svg"
                                  fontSize="default"
                                  viewBox="0 0 24 24"
                                >
                                  <svg
                                    aria-hidden="true"
                                    className="MuiSvgIcon-root-116 MuiSelect-icon-102"
                                    focusable="false"
                                    viewBox="0 0 24 24"
                                  >
                                    <path
                                      d="M7 10l5 5 5-5z"
                                    />
                                  </svg>
                                </SvgIcon>
                              </WithStyles(SvgIcon)>
                            </ArrowDropDown>
                          </pure(ArrowDropDown)>
                          <WithStyles(Menu)
                            MenuListProps={
                              Object {
                                "role": "listbox",
                              }
                            }
                            PaperProps={
                              Object {
                                "style": Object {
                                  "minWidth": null,
                                },
                              }
                            }
                            anchorEl={null}
                            id="menu-temperature"
                            onClose={[Function]}
                            open={false}
                          >
                            <Menu
                              MenuListProps={
                                Object {
                                  "role": "listbox",
                                }
                              }
                              PaperProps={
                                Object {
                                  "style": Object {
                                    "minWidth": null,
                                  },
                                }
                              }
                              anchorEl={null}
                              classes={
                                Object {
                                  "paper": "MuiMenu-paper-123",
                                }
                              }
                              disableAutoFocusItem={false}
                              id="menu-temperature"
                              onClose={[Function]}
                              open={false}
                              theme={
                                Object {
                                  "breakpoints": Object {
                                    "between": [Function],
                                    "down": [Function],
                                    "keys": Array [
                                      "xs",
                                      "sm",
                                      "md",
                                      "lg",
                                      "xl",
                                    ],
                                    "only": [Function],
                                    "up": [Function],
                                    "values": Object {
                                      "lg": 1280,
                                      "md": 960,
                                      "sm": 600,
                                      "xl": 1920,
                                      "xs": 0,
                                    },
                                    "width": [Function],
                                  },
                                  "direction": "ltr",
                                  "mixins": Object {
                                    "gutters": [Function],
                                    "toolbar": Object {
                                      "@media (min-width:0px) and (orientation: landscape)": Object {
                                        "minHeight": 48,
                                      },
                                      "@media (min-width:600px)": Object {
                                        "minHeight": 64,
                                      },
                                      "minHeight": 56,
                                    },
                                  },
                                  "overrides": Object {},
                                  "palette": Object {
                                    "action": Object {
                                      "active": "rgba(0, 0, 0, 0.54)",
                                      "disabled": "rgba(0, 0, 0, 0.26)",
                                      "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                      "hover": "rgba(0, 0, 0, 0.08)",
                                      "hoverOpacity": 0.08,
                                      "selected": "rgba(0, 0, 0, 0.14)",
                                    },
                                    "augmentColor": [Function],
                                    "background": Object {
                                      "default": "#fafafa",
                                      "paper": "#fff",
                                    },
                                    "common": Object {
                                      "black": "#000",
                                      "white": "#fff",
                                    },
                                    "contrastThreshold": 3,
                                    "divider": "rgba(0, 0, 0, 0.12)",
                                    "error": Object {
                                      "contrastText": "#fff",
                                      "dark": "#d32f2f",
                                      "light": "#e57373",
                                      "main": "#f44336",
                                    },
                                    "getContrastText": [Function],
                                    "grey": Object {
                                      "100": "#f5f5f5",
                                      "200": "#eeeeee",
                                      "300": "#e0e0e0",
                                      "400": "#bdbdbd",
                                      "50": "#fafafa",
                                      "500": "#9e9e9e",
                                      "600": "#757575",
                                      "700": "#616161",
                                      "800": "#424242",
                                      "900": "#212121",
                                      "A100": "#d5d5d5",
                                      "A200": "#aaaaaa",
                                      "A400": "#303030",
                                      "A700": "#616161",
                                    },
                                    "primary": Object {
                                      "contrastText": "#fff",
                                      "dark": "#303f9f",
                                      "light": "#7986cb",
                                      "main": "#3f51b5",
                                    },
                                    "secondary": Object {
                                      "contrastText": "#fff",
                                      "dark": "#c51162",
                                      "light": "#ff4081",
                                      "main": "#f50057",
                                    },
                                    "text": Object {
                                      "disabled": "rgba(0, 0, 0, 0.38)",
                                      "hint": "rgba(0, 0, 0, 0.38)",
                                      "primary": "rgba(0, 0, 0, 0.87)",
                                      "secondary": "rgba(0, 0, 0, 0.54)",
                                    },
                                    "tonalOffset": 0.2,
                                    "type": "light",
                                  },
                                  "props": Object {},
                                  "shadows": Array [
                                    "none",
                                    "0px 1px 3px 0px rgba(0, 0, 0, 0.2),0px 1px 1px 0px rgba(0, 0, 0, 0.14),0px 2px 1px -1px rgba(0, 0, 0, 0.12)",
                                    "0px 1px 5px 0px rgba(0, 0, 0, 0.2),0px 2px 2px 0px rgba(0, 0, 0, 0.14),0px 3px 1px -2px rgba(0, 0, 0, 0.12)",
                                    "0px 1px 8px 0px rgba(0, 0, 0, 0.2),0px 3px 4px 0px rgba(0, 0, 0, 0.14),0px 3px 3px -2px rgba(0, 0, 0, 0.12)",
                                    "0px 2px 4px -1px rgba(0, 0, 0, 0.2),0px 4px 5px 0px rgba(0, 0, 0, 0.14),0px 1px 10px 0px rgba(0, 0, 0, 0.12)",
                                    "0px 3px 5px -1px rgba(0, 0, 0, 0.2),0px 5px 8px 0px rgba(0, 0, 0, 0.14),0px 1px 14px 0px rgba(0, 0, 0, 0.12)",
                                    "0px 3px 5px -1px rgba(0, 0, 0, 0.2),0px 6px 10px 0px rgba(0, 0, 0, 0.14),0px 1px 18px 0px rgba(0, 0, 0, 0.12)",
                                    "0px 4px 5px -2px rgba(0, 0, 0, 0.2),0px 7px 10px 1px rgba(0, 0, 0, 0.14),0px 2px 16px 1px rgba(0, 0, 0, 0.12)",
                                    "0px 5px 5px -3px rgba(0, 0, 0, 0.2),0px 8px 10px 1px rgba(0, 0, 0, 0.14),0px 3px 14px 2px rgba(0, 0, 0, 0.12)",
                                    "0px 5px 6px -3px rgba(0, 0, 0, 0.2),0px 9px 12px 1px rgba(0, 0, 0, 0.14),0px 3px 16px 2px rgba(0, 0, 0, 0.12)",
                                    "0px 6px 6px -3px rgba(0, 0, 0, 0.2),0px 10px 14px 1px rgba(0, 0, 0, 0.14),0px 4px 18px 3px rgba(0, 0, 0, 0.12)",
                                    "0px 6px 7px -4px rgba(0, 0, 0, 0.2),0px 11px 15px 1px rgba(0, 0, 0, 0.14),0px 4px 20px 3px rgba(0, 0, 0, 0.12)",
                                    "0px 7px 8px -4px rgba(0, 0, 0, 0.2),0px 12px 17px 2px rgba(0, 0, 0, 0.14),0px 5px 22px 4px rgba(0, 0, 0, 0.12)",
                                    "0px 7px 8px -4px rgba(0, 0, 0, 0.2),0px 13px 19px 2px rgba(0, 0, 0, 0.14),0px 5px 24px 4px rgba(0, 0, 0, 0.12)",
                                    "0px 7px 9px -4px rgba(0, 0, 0, 0.2),0px 14px 21px 2px rgba(0, 0, 0, 0.14),0px 5px 26px 4px rgba(0, 0, 0, 0.12)",
                                    "0px 8px 9px -5px rgba(0, 0, 0, 0.2),0px 15px 22px 2px rgba(0, 0, 0, 0.14),0px 6px 28px 5px rgba(0, 0, 0, 0.12)",
                                    "0px 8px 10px -5px rgba(0, 0, 0, 0.2),0px 16px 24px 2px rgba(0, 0, 0, 0.14),0px 6px 30px 5px rgba(0, 0, 0, 0.12)",
                                    "0px 8px 11px -5px rgba(0, 0, 0, 0.2),0px 17px 26px 2px rgba(0, 0, 0, 0.14),0px 6px 32px 5px rgba(0, 0, 0, 0.12)",
                                    "0px 9px 11px -5px rgba(0, 0, 0, 0.2),0px 18px 28px 2px rgba(0, 0, 0, 0.14),0px 7px 34px 6px rgba(0, 0, 0, 0.12)",
                                    "0px 9px 12px -6px rgba(0, 0, 0, 0.2),0px 19px 29px 2px rgba(0, 0, 0, 0.14),0px 7px 36px 6px rgba(0, 0, 0, 0.12)",
                                    "0px 10px 13px -6px rgba(0, 0, 0, 0.2),0px 20px 31px 3px rgba(0, 0, 0, 0.14),0px 8px 38px 7px rgba(0, 0, 0, 0.12)",
                                    "0px 10px 13px -6px rgba(0, 0, 0, 0.2),0px 21px 33px 3px rgba(0, 0, 0, 0.14),0px 8px 40px 7px rgba(0, 0, 0, 0.12)",
                                    "0px 10px 14px -6px rgba(0, 0, 0, 0.2),0px 22px 35px 3px rgba(0, 0, 0, 0.14),0px 8px 42px 7px rgba(0, 0, 0, 0.12)",
                                    "0px 11px 14px -7px rgba(0, 0, 0, 0.2),0px 23px 36px 3px rgba(0, 0, 0, 0.14),0px 9px 44px 8px rgba(0, 0, 0, 0.12)",
                                    "0px 11px 15px -7px rgba(0, 0, 0, 0.2),0px 24px 38px 3px rgba(0, 0, 0, 0.14),0px 9px 46px 8px rgba(0, 0, 0, 0.12)",
                                  ],
                                  "shape": Object {
                                    "borderRadius": 4,
                                  },
                                  "spacing": Object {
                                    "unit": 8,
                                  },
                                  "transitions": Object {
                                    "create": [Function],
                                    "duration": Object {
                                      "complex": 375,
                                      "enteringScreen": 225,
                                      "leavingScreen": 195,
                                      "short": 250,
                                      "shorter": 200,
                                      "shortest": 150,
                                      "standard": 300,
                                    },
                                    "easing": Object {
                                      "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                      "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                      "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                      "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                    },
                                    "getAutoHeightDuration": [Function],
                                  },
                                  "typography": Object {
                                    "body1": Object {
                                      "color": "rgba(0, 0, 0, 0.87)",
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "0.875rem",
                                      "fontWeight": 400,
                                      "lineHeight": "1.46429em",
                                    },
                                    "body2": Object {
                                      "color": "rgba(0, 0, 0, 0.87)",
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "0.875rem",
                                      "fontWeight": 500,
                                      "lineHeight": "1.71429em",
                                    },
                                    "button": Object {
                                      "color": "rgba(0, 0, 0, 0.87)",
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "0.875rem",
                                      "fontWeight": 500,
                                      "textTransform": "uppercase",
                                    },
                                    "caption": Object {
                                      "color": "rgba(0, 0, 0, 0.54)",
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "0.75rem",
                                      "fontWeight": 400,
                                      "lineHeight": "1.375em",
                                    },
                                    "display1": Object {
                                      "color": "rgba(0, 0, 0, 0.54)",
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "2.125rem",
                                      "fontWeight": 400,
                                      "lineHeight": "1.20588em",
                                    },
                                    "display2": Object {
                                      "color": "rgba(0, 0, 0, 0.54)",
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "2.8125rem",
                                      "fontWeight": 400,
                                      "lineHeight": "1.13333em",
                                      "marginLeft": "-.02em",
                                    },
                                    "display3": Object {
                                      "color": "rgba(0, 0, 0, 0.54)",
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "3.5rem",
                                      "fontWeight": 400,
                                      "letterSpacing": "-.02em",
                                      "lineHeight": "1.30357em",
                                      "marginLeft": "-.02em",
                                    },
                                    "display4": Object {
                                      "color": "rgba(0, 0, 0, 0.54)",
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "7rem",
                                      "fontWeight": 300,
                                      "letterSpacing": "-.04em",
                                      "lineHeight": "1.14286em",
                                      "marginLeft": "-.04em",
                                    },
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": 14,
                                    "fontWeightLight": 300,
                                    "fontWeightMedium": 500,
                                    "fontWeightRegular": 400,
                                    "headline": Object {
                                      "color": "rgba(0, 0, 0, 0.87)",
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "1.5rem",
                                      "fontWeight": 400,
                                      "lineHeight": "1.35417em",
                                    },
                                    "pxToRem": [Function],
                                    "round": [Function],
                                    "subheading": Object {
                                      "color": "rgba(0, 0, 0, 0.87)",
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "1rem",
                                      "fontWeight": 400,
                                      "lineHeight": "1.5em",
                                    },
                                    "title": Object {
                                      "color": "rgba(0, 0, 0, 0.87)",
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "1.3125rem",
                                      "fontWeight": 500,
                                      "lineHeight": "1.16667em",
                                    },
                                  },
                                  "zIndex": Object {
                                    "appBar": 1100,
                                    "drawer": 1200,
                                    "mobileStepper": 1000,
                                    "modal": 1300,
                                    "snackbar": 1400,
                                    "tooltip": 1500,
                                  },
                                }
                              }
                              transitionDuration="auto"
                            >
                              <WithStyles(Popover)
                                PaperProps={
                                  Object {
                                    "classes": Object {
                                      "root": "MuiMenu-paper-123",
                                    },
                                    "style": Object {
                                      "minWidth": null,
                                    },
                                  }
                                }
                                anchorEl={null}
                                anchorOrigin={
                                  Object {
                                    "horizontal": "left",
                                    "vertical": "top",
                                  }
                                }
                                getContentAnchorEl={[Function]}
                                id="menu-temperature"
                                onClose={[Function]}
                                onEnter={[Function]}
                                open={false}
                                transformOrigin={
                                  Object {
                                    "horizontal": "left",
                                    "vertical": "top",
                                  }
                                }
                                transitionDuration="auto"
                              >
                                <Popover
                                  PaperProps={
                                    Object {
                                      "classes": Object {
                                        "root": "MuiMenu-paper-123",
                                      },
                                      "style": Object {
                                        "minWidth": null,
                                      },
                                    }
                                  }
                                  TransitionComponent={[Function]}
                                  anchorEl={null}
                                  anchorOrigin={
                                    Object {
                                      "horizontal": "left",
                                      "vertical": "top",
                                    }
                                  }
                                  anchorReference="anchorEl"
                                  classes={
                                    Object {
                                      "paper": "MuiPopover-paper-124",
                                    }
                                  }
                                  elevation={8}
                                  getContentAnchorEl={[Function]}
                                  id="menu-temperature"
                                  marginThreshold={16}
                                  onClose={[Function]}
                                  onEnter={[Function]}
                                  open={false}
                                  transformOrigin={
                                    Object {
                                      "horizontal": "left",
                                      "vertical": "top",
                                    }
                                  }
                                  transitionDuration="auto"
                                >
                                  <WithStyles(Modal)
                                    BackdropProps={
                                      Object {
                                        "invisible": true,
                                      }
                                    }
                                    id="menu-temperature"
                                    onClose={[Function]}
                                    open={false}
                                  >
                                    <Modal
                                      BackdropComponent={[Function]}
                                      BackdropProps={
                                        Object {
                                          "invisible": true,
                                        }
                                      }
                                      classes={
                                        Object {
                                          "hidden": "MuiModal-hidden-81",
                                          "root": "MuiModal-root-80",
                                        }
                                      }
                                      disableAutoFocus={false}
                                      disableBackdropClick={false}
                                      disableEnforceFocus={false}
                                      disableEscapeKeyDown={false}
                                      disablePortal={false}
                                      disableRestoreFocus={false}
                                      hideBackdrop={false}
                                      id="menu-temperature"
                                      keepMounted={false}
                                      manager={
                                        ModalManager {
                                          "containers": Array [],
                                          "data": Array [],
                                          "handleContainerOverflow": true,
                                          "hideSiblingNodes": true,
                                          "modals": Array [],
                                        }
                                      }
                                      onClose={[Function]}
                                      open={false}
                                    />
                                  </WithStyles(Modal)>
                                </Popover>
                              </WithStyles(Popover)>
                            </Menu>
                          </WithStyles(Menu)>
                        </div>
                      </SelectInput>
                    </div>
                  </Input>
                </WithStyles(Input)>
              </Select>
            </WithStyles(Select)>
          </div>
        </FormControl>
      </WithStyles(FormControl)>
      <TextField
        id="temperature"
        label="Temperature"
        margin="normal"
        onChange={[Function]}
        required={true}
        select={false}
        style={
          Object {
            "marginBotton": 0,
            "marginRight": 10,
            "marginTop": 0,
            "width": "20%",
          }
        }
        type="number"
        value=""
      >
        <WithStyles(FormControl)
          margin="normal"
          required={true}
          style={
            Object {
              "marginBotton": 0,
              "marginRight": 10,
              "marginTop": 0,
              "width": "20%",
            }
          }
        >
          <FormControl
            classes={
              Object {
                "fullWidth": "MuiFormControl-fullWidth-85",
                "marginDense": "MuiFormControl-marginDense-84",
                "marginNormal": "MuiFormControl-marginNormal-83",
                "root": "MuiFormControl-root-82",
              }
            }
            component="div"
            disabled={false}
            error={false}
            fullWidth={false}
            margin="normal"
            required={true}
            style={
              Object {
                "marginBotton": 0,
                "marginRight": 10,
                "marginTop": 0,
                "width": "20%",
              }
            }
          >
            <div
              className="MuiFormControl-root-82 MuiFormControl-marginNormal-83"
              style={
                Object {
                  "marginBotton": 0,
                  "marginRight": 10,
                  "marginTop": 0,
                  "width": "20%",
                }
              }
            >
              <WithStyles(InputLabel)
                htmlFor="temperature"
              >
                <InputLabel
                  classes={
                    Object {
                      "animated": "MuiInputLabel-animated-90",
                      "formControl": "MuiInputLabel-formControl-87",
                      "marginDense": "MuiInputLabel-marginDense-88",
                      "root": "MuiInputLabel-root-86",
                      "shrink": "MuiInputLabel-shrink-89",
                    }
                  }
                  disableAnimation={false}
                  htmlFor="temperature"
                >
                  <WithStyles(FormLabel)
                    className="MuiInputLabel-root-86 MuiInputLabel-formControl-87 MuiInputLabel-animated-90"
                    data-shrink={false}
                    htmlFor="temperature"
                  >
                    <FormLabel
                      className="MuiInputLabel-root-86 MuiInputLabel-formControl-87 MuiInputLabel-animated-90"
                      classes={
                        Object {
                          "asterisk": "MuiFormLabel-asterisk-97",
                          "disabled": "MuiFormLabel-disabled-93",
                          "error": "MuiFormLabel-error-94",
                          "filled": "MuiFormLabel-filled-95",
                          "focused": "MuiFormLabel-focused-92",
                          "required": "MuiFormLabel-required-96",
                          "root": "MuiFormLabel-root-91",
                        }
                      }
                      component="label"
                      data-shrink={false}
                      htmlFor="temperature"
                    >
                      <label
                        className="MuiFormLabel-root-91 MuiFormLabel-required-96 MuiInputLabel-root-86 MuiInputLabel-formControl-87 MuiInputLabel-animated-90"
                        data-shrink={false}
                        htmlFor="temperature"
                      >
                        Temperature
                        <span
                          className="MuiFormLabel-asterisk-97"
                        >
                          â€‰*
                        </span>
                      </label>
                    </FormLabel>
                  </WithStyles(FormLabel)>
                </InputLabel>
              </WithStyles(InputLabel)>
              <WithStyles(Input)
                id="temperature"
                onChange={[Function]}
                type="number"
                value=""
              >
                <Input
                  classes={
                    Object {
                      "disabled": "MuiInput-disabled-106",
                      "error": "MuiInput-error-108",
                      "focused": "MuiInput-focused-105",
                      "formControl": "MuiInput-formControl-104",
                      "fullWidth": "MuiInput-fullWidth-110",
                      "input": "MuiInput-input-111",
                      "inputMarginDense": "MuiInput-inputMarginDense-112",
                      "inputMultiline": "MuiInput-inputMultiline-113",
                      "inputType": "MuiInput-inputType-114",
                      "inputTypeSearch": "MuiInput-inputTypeSearch-115",
                      "multiline": "MuiInput-multiline-109",
                      "root": "MuiInput-root-103",
                      "underline": "MuiInput-underline-107",
                    }
                  }
                  disableUnderline={false}
                  fullWidth={false}
                  id="temperature"
                  multiline={false}
                  onChange={[Function]}
                  type="number"
                  value=""
                >
                  <div
                    className="MuiInput-root-103 MuiInput-formControl-104 MuiInput-underline-107"
                  >
                    <input
                      aria-invalid={false}
                      className="MuiInput-input-111 MuiInput-inputType-114"
                      disabled={false}
                      id="temperature"
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      required={true}
                      type="number"
                      value=""
                    />
                  </div>
                </Input>
              </WithStyles(Input)>
            </div>
          </FormControl>
        </WithStyles(FormControl)>
      </TextField>
      <WithStyles(Button)
        color="primary"
        onClick={[Function]}
        variant="contained"
      >
        <Button
          classes={
            Object {
              "colorInherit": "MuiButton-colorInherit-65",
              "contained": "MuiButton-contained-55",
              "containedPrimary": "MuiButton-containedPrimary-56",
              "containedSecondary": "MuiButton-containedSecondary-57",
              "disabled": "MuiButton-disabled-64",
              "extendedFab": "MuiButton-extendedFab-62",
              "fab": "MuiButton-fab-61",
              "flat": "MuiButton-flat-49",
              "flatPrimary": "MuiButton-flatPrimary-50",
              "flatSecondary": "MuiButton-flatSecondary-51",
              "focusVisible": "MuiButton-focusVisible-63",
              "fullWidth": "MuiButton-fullWidth-69",
              "label": "MuiButton-label-45",
              "mini": "MuiButton-mini-66",
              "outlined": "MuiButton-outlined-52",
              "outlinedPrimary": "MuiButton-outlinedPrimary-53",
              "outlinedSecondary": "MuiButton-outlinedSecondary-54",
              "raised": "MuiButton-raised-58",
              "raisedPrimary": "MuiButton-raisedPrimary-59",
              "raisedSecondary": "MuiButton-raisedSecondary-60",
              "root": "MuiButton-root-44",
              "sizeLarge": "MuiButton-sizeLarge-68",
              "sizeSmall": "MuiButton-sizeSmall-67",
              "text": "MuiButton-text-46",
              "textPrimary": "MuiButton-textPrimary-47",
              "textSecondary": "MuiButton-textSecondary-48",
            }
          }
          color="primary"
          component="button"
          disableFocusRipple={false}
          disabled={false}
          fullWidth={false}
          mini={false}
          onClick={[Function]}
          size="medium"
          type="button"
          variant="contained"
        >
          <WithStyles(ButtonBase)
            className="MuiButton-root-44 MuiButton-contained-55 MuiButton-containedPrimary-56 MuiButton-raised-58 MuiButton-raisedPrimary-59"
            component="button"
            disabled={false}
            focusRipple={true}
            focusVisibleClassName="MuiButton-focusVisible-63"
            onClick={[Function]}
            type="button"
          >
            <ButtonBase
              centerRipple={false}
              className="MuiButton-root-44 MuiButton-contained-55 MuiButton-containedPrimary-56 MuiButton-raised-58 MuiButton-raisedPrimary-59"
              classes={
                Object {
                  "disabled": "MuiButtonBase-disabled-71",
                  "focusVisible": "MuiButtonBase-focusVisible-72",
                  "root": "MuiButtonBase-root-70",
                }
              }
              component="button"
              disableRipple={false}
              disableTouchRipple={false}
              disabled={false}
              focusRipple={true}
              focusVisibleClassName="MuiButton-focusVisible-63"
              onClick={[Function]}
              tabIndex="0"
              type="button"
            >
              <button
                className="MuiButtonBase-root-70 MuiButton-root-44 MuiButton-contained-55 MuiButton-containedPrimary-56 MuiButton-raised-58 MuiButton-raisedPrimary-59"
                disabled={false}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onMouseDown={[Function]}
                onMouseLeave={[Function]}
                onMouseUp={[Function]}
                onTouchEnd={[Function]}
                onTouchMove={[Function]}
                onTouchStart={[Function]}
                tabIndex="0"
                type="button"
              >
                <span
                  className="MuiButton-label-45"
                >
                  Add
                </span>
                <WithStyles(TouchRipple)
                  center={false}
                  innerRef={[Function]}
                >
                  <TouchRipple
                    center={false}
                    classes={
                      Object {
                        "child": "MuiTouchRipple-child-77",
                        "childLeaving": "MuiTouchRipple-childLeaving-78",
                        "childPulsate": "MuiTouchRipple-childPulsate-79",
                        "ripple": "MuiTouchRipple-ripple-74",
                        "ripplePulsate": "MuiTouchRipple-ripplePulsate-76",
                        "rippleVisible": "MuiTouchRipple-rippleVisible-75",
                        "root": "MuiTouchRipple-root-73",
                      }
                    }
                  >
                    <TransitionGroup
                      childFactory={[Function]}
                      className="MuiTouchRipple-root-73"
                      component="span"
                      enter={true}
                      exit={true}
                    >
                      <span
                        className="MuiTouchRipple-root-73"
                      />
                    </TransitionGroup>
                  </TouchRipple>
                </WithStyles(TouchRipple)>
              </button>
            </ButtonBase>
          </WithStyles(ButtonBase)>
        </Button>
      </WithStyles(Button)>
    </div>
  </div>
</AddTemperature>
`;

exports[`AddUnits should match snapshot 1`] = `
<AddUnits
  addUnits={[Function]}
  handleChange={[Function]}
  machines={
    Object {
      "IDX11111": Object {
        "average": 0,
        "name": "Jhon",
        "numAdded": 0,
        "temperature": 0,
        "units": 0,
      },
      "IDX12345": Object {
        "average": 0,
        "name": "Karam",
        "numAdded": 0,
        "temperature": 0,
        "units": 0,
      },
      "IDX2222": Object {
        "average": 0,
        "name": "Vemly",
        "numAdded": 0,
        "temperature": 0,
        "units": 0,
      },
    }
  }
  units=""
  unitsId=""
>
  <div
    style={
      Object {
        "marginTop": 20,
      }
    }
  >
    <h4>
      Add Units
    </h4>
    <div>
      <WithStyles(FormControl)
        required={true}
        style={
          Object {
            "minWidth": "20%",
          }
        }
      >
        <FormControl
          classes={
            Object {
              "fullWidth": "MuiFormControl-fullWidth-85",
              "marginDense": "MuiFormControl-marginDense-84",
              "marginNormal": "MuiFormControl-marginNormal-83",
              "root": "MuiFormControl-root-82",
            }
          }
          component="div"
          disabled={false}
          error={false}
          fullWidth={false}
          margin="none"
          required={true}
          style={
            Object {
              "minWidth": "20%",
            }
          }
        >
          <div
            className="MuiFormControl-root-82"
            style={
              Object {
                "minWidth": "20%",
              }
            }
          >
            <WithStyles(InputLabel)
              htmlFor="units"
            >
              <InputLabel
                classes={
                  Object {
                    "animated": "MuiInputLabel-animated-90",
                    "formControl": "MuiInputLabel-formControl-87",
                    "marginDense": "MuiInputLabel-marginDense-88",
                    "root": "MuiInputLabel-root-86",
                    "shrink": "MuiInputLabel-shrink-89",
                  }
                }
                disableAnimation={false}
                htmlFor="units"
              >
                <WithStyles(FormLabel)
                  className="MuiInputLabel-root-86 MuiInputLabel-formControl-87 MuiInputLabel-animated-90"
                  data-shrink={false}
                  htmlFor="units"
                >
                  <FormLabel
                    className="MuiInputLabel-root-86 MuiInputLabel-formControl-87 MuiInputLabel-animated-90"
                    classes={
                      Object {
                        "asterisk": "MuiFormLabel-asterisk-97",
                        "disabled": "MuiFormLabel-disabled-93",
                        "error": "MuiFormLabel-error-94",
                        "filled": "MuiFormLabel-filled-95",
                        "focused": "MuiFormLabel-focused-92",
                        "required": "MuiFormLabel-required-96",
                        "root": "MuiFormLabel-root-91",
                      }
                    }
                    component="label"
                    data-shrink={false}
                    htmlFor="units"
                  >
                    <label
                      className="MuiFormLabel-root-91 MuiFormLabel-required-96 MuiInputLabel-root-86 MuiInputLabel-formControl-87 MuiInputLabel-animated-90"
                      data-shrink={false}
                      htmlFor="units"
                    >
                      Units
                      <span
                        className="MuiFormLabel-asterisk-97"
                      >
                        â€‰*
                      </span>
                    </label>
                  </FormLabel>
                </WithStyles(FormLabel)>
              </InputLabel>
            </WithStyles(InputLabel)>
            <WithStyles(Select)
              className="Select-control-units"
              inputProps={
                Object {
                  "name": "units",
                }
              }
              onChange={[Function]}
              style={
                Object {
                  "marginLeft": 0,
                  "marginRight": 10,
                }
              }
              value=""
            >
              <Select
                IconComponent={[Function]}
                autoWidth={false}
                className="Select-control-units"
                classes={
                  Object {
                    "disabled": "MuiSelect-disabled-101",
                    "icon": "MuiSelect-icon-102",
                    "root": "MuiSelect-root-98",
                    "select": "MuiSelect-select-99",
                    "selectMenu": "MuiSelect-selectMenu-100",
                  }
                }
                displayEmpty={false}
                input={<WithStyles(Input) />}
                inputProps={
                  Object {
                    "name": "units",
                  }
                }
                multiple={false}
                native={false}
                onChange={[Function]}
                style={
                  Object {
                    "marginLeft": 0,
                    "marginRight": 10,
                  }
                }
                value=""
              >
                <WithStyles(Input)
                  className="Select-control-units"
                  inputComponent={[Function]}
                  inputProps={
                    Object {
                      "IconComponent": [Function],
                      "MenuProps": undefined,
                      "SelectDisplayProps": undefined,
                      "autoWidth": false,
                      "children": Array [
                        <WithStyles(MenuItem)
                          value=""
                        >
                          <em>
                            None
                          </em>
                        </WithStyles(MenuItem)>,
                        Array [
                          <WithStyles(MenuItem)
                            value="IDX12345"
                          >
                            IDX12345
                          </WithStyles(MenuItem)>,
                          <WithStyles(MenuItem)
                            value="IDX11111"
                          >
                            IDX11111
                          </WithStyles(MenuItem)>,
                          <WithStyles(MenuItem)
                            value="IDX2222"
                          >
                            IDX2222
                          </WithStyles(MenuItem)>,
                        ],
                      ],
                      "classes": Object {
                        "disabled": "MuiSelect-disabled-101",
                        "icon": "MuiSelect-icon-102",
                        "root": "MuiSelect-root-98",
                        "select": "MuiSelect-select-99",
                        "selectMenu": "MuiSelect-selectMenu-100",
                      },
                      "displayEmpty": false,
                      "multiple": false,
                      "name": "units",
                      "onClose": undefined,
                      "onOpen": undefined,
                      "open": undefined,
                      "renderValue": undefined,
                      "type": undefined,
                    }
                  }
                  onChange={[Function]}
                  style={
                    Object {
                      "marginLeft": 0,
                      "marginRight": 10,
                    }
                  }
                  value=""
                >
                  <Input
                    className="Select-control-units"
                    classes={
                      Object {
                        "disabled": "MuiInput-disabled-106",
                        "error": "MuiInput-error-108",
                        "focused": "MuiInput-focused-105",
                        "formControl": "MuiInput-formControl-104",
                        "fullWidth": "MuiInput-fullWidth-110",
                        "input": "MuiInput-input-111",
                        "inputMarginDense": "MuiInput-inputMarginDense-112",
                        "inputMultiline": "MuiInput-inputMultiline-113",
                        "inputType": "MuiInput-inputType-114",
                        "inputTypeSearch": "MuiInput-inputTypeSearch-115",
                        "multiline": "MuiInput-multiline-109",
                        "root": "MuiInput-root-103",
                        "underline": "MuiInput-underline-107",
                      }
                    }
                    disableUnderline={false}
                    fullWidth={false}
                    inputComponent={[Function]}
                    inputProps={
                      Object {
                        "IconComponent": [Function],
                        "MenuProps": undefined,
                        "SelectDisplayProps": undefined,
                        "autoWidth": false,
                        "children": Array [
                          <WithStyles(MenuItem)
                            value=""
                          >
                            <em>
                              None
                            </em>
                          </WithStyles(MenuItem)>,
                          Array [
                            <WithStyles(MenuItem)
                              value="IDX12345"
                            >
                              IDX12345
                            </WithStyles(MenuItem)>,
                            <WithStyles(MenuItem)
                              value="IDX11111"
                            >
                              IDX11111
                            </WithStyles(MenuItem)>,
                            <WithStyles(MenuItem)
                              value="IDX2222"
                            >
                              IDX2222
                            </WithStyles(MenuItem)>,
                          ],
                        ],
                        "classes": Object {
                          "disabled": "MuiSelect-disabled-101",
                          "icon": "MuiSelect-icon-102",
                          "root": "MuiSelect-root-98",
                          "select": "MuiSelect-select-99",
                          "selectMenu": "MuiSelect-selectMenu-100",
                        },
                        "displayEmpty": false,
                        "multiple": false,
                        "name": "units",
                        "onClose": undefined,
                        "onOpen": undefined,
                        "open": undefined,
                        "renderValue": undefined,
                        "type": undefined,
                      }
                    }
                    multiline={false}
                    onChange={[Function]}
                    style={
                      Object {
                        "marginLeft": 0,
                        "marginRight": 10,
                      }
                    }
                    type="text"
                    value=""
                  >
                    <div
                      className="MuiInput-root-103 MuiInput-formControl-104 MuiInput-underline-107 Select-control-units"
                      style={
                        Object {
                          "marginLeft": 0,
                          "marginRight": 10,
                        }
                      }
                    >
                      <SelectInput
                        IconComponent={[Function]}
                        aria-invalid={false}
                        autoWidth={false}
                        className="MuiInput-input-111"
                        classes={
                          Object {
                            "disabled": "MuiSelect-disabled-101",
                            "icon": "MuiSelect-icon-102",
                            "root": "MuiSelect-root-98",
                            "select": "MuiSelect-select-99",
                            "selectMenu": "MuiSelect-selectMenu-100",
                          }
                        }
                        disabled={false}
                        displayEmpty={false}
                        inputRef={[Function]}
                        multiple={false}
                        name="units"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        required={true}
                        value=""
                      >
                        <div
                          className="MuiSelect-root-98"
                        >
                          <div
                            aria-haspopup="true"
                            aria-owns={null}
                            aria-pressed="false"
                            className="MuiSelect-select-99 MuiSelect-selectMenu-100 MuiInput-input-111"
                            onBlur={[Function]}
                            onClick={[Function]}
                            onFocus={[Function]}
                            onKeyDown={[Function]}
                            role="button"
                            tabIndex={0}
                          >
                            <span
                              dangerouslySetInnerHTML={
                                Object {
                                  "__html": "&#8203;",
                                }
                              }
                            />
                          </div>
                          <input
                            name="units"
                            type="hidden"
                            value=""
                          />
                          <pure(ArrowDropDown)
                            className="MuiSelect-icon-102"
                          >
                            <ArrowDropDown
                              className="MuiSelect-icon-102"
                            >
                              <WithStyles(SvgIcon)
                                className="MuiSelect-icon-102"
                              >
                                <SvgIcon
                                  className="MuiSelect-icon-102"
                                  classes={
                                    Object {
                                      "colorAction": "MuiSvgIcon-colorAction-119",
                                      "colorDisabled": "MuiSvgIcon-colorDisabled-121",
                                      "colorError": "MuiSvgIcon-colorError-120",
                                      "colorPrimary": "MuiSvgIcon-colorPrimary-117",
                                      "colorSecondary": "MuiSvgIcon-colorSecondary-118",
                                      "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-122",
                                      "root": "MuiSvgIcon-root-116",
                                    }
                                  }
                                  color="inherit"
                                  component="svg"
                                  fontSize="default"
                                  viewBox="0 0 24 24"
                                >
                                  <svg
                                    aria-hidden="true"
                                    className="MuiSvgIcon-root-116 MuiSelect-icon-102"
                                    focusable="false"
                                    viewBox="0 0 24 24"
                                  >
                                    <path
                                      d="M7 10l5 5 5-5z"
                                    />
                                  </svg>
                                </SvgIcon>
                              </WithStyles(SvgIcon)>
                            </ArrowDropDown>
                          </pure(ArrowDropDown)>
                          <WithStyles(Menu)
                            MenuListProps={
                              Object {
                                "role": "listbox",
                              }
                            }
                            PaperProps={
                              Object {
                                "style": Object {
                                  "minWidth": null,
                                },
                              }
                            }
                            anchorEl={null}
                            id="menu-units"
                            onClose={[Function]}
                            open={false}
                          >
                            <Menu
                              MenuListProps={
                                Object {
                                  "role": "listbox",
                                }
                              }
                              PaperProps={
                                Object {
                                  "style": Object {
                                    "minWidth": null,
                                  },
                                }
                              }
                              anchorEl={null}
                              classes={
                                Object {
                                  "paper": "MuiMenu-paper-123",
                                }
                              }
                              disableAutoFocusItem={false}
                              id="menu-units"
                              onClose={[Function]}
                              open={false}
                              theme={
                                Object {
                                  "breakpoints": Object {
                                    "between": [Function],
                                    "down": [Function],
                                    "keys": Array [
                                      "xs",
                                      "sm",
                                      "md",
                                      "lg",
                                      "xl",
                                    ],
                                    "only": [Function],
                                    "up": [Function],
                                    "values": Object {
                                      "lg": 1280,
                                      "md": 960,
                                      "sm": 600,
                                      "xl": 1920,
                                      "xs": 0,
                                    },
                                    "width": [Function],
                                  },
                                  "direction": "ltr",
                                  "mixins": Object {
                                    "gutters": [Function],
                                    "toolbar": Object {
                                      "@media (min-width:0px) and (orientation: landscape)": Object {
                                        "minHeight": 48,
                                      },
                                      "@media (min-width:600px)": Object {
                                        "minHeight": 64,
                                      },
                                      "minHeight": 56,
                                    },
                                  },
                                  "overrides": Object {},
                                  "palette": Object {
                                    "action": Object {
                                      "active": "rgba(0, 0, 0, 0.54)",
                                      "disabled": "rgba(0, 0, 0, 0.26)",
                                      "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                      "hover": "rgba(0, 0, 0, 0.08)",
                                      "hoverOpacity": 0.08,
                                      "selected": "rgba(0, 0, 0, 0.14)",
                                    },
                                    "augmentColor": [Function],
                                    "background": Object {
                                      "default": "#fafafa",
                                      "paper": "#fff",
                                    },
                                    "common": Object {
                                      "black": "#000",
                                      "white": "#fff",
                                    },
                                    "contrastThreshold": 3,
                                    "divider": "rgba(0, 0, 0, 0.12)",
                                    "error": Object {
                                      "contrastText": "#fff",
                                      "dark": "#d32f2f",
                                      "light": "#e57373",
                                      "main": "#f44336",
                                    },
                                    "getContrastText": [Function],
                                    "grey": Object {
                                      "100": "#f5f5f5",
                                      "200": "#eeeeee",
                                      "300": "#e0e0e0",
                                      "400": "#bdbdbd",
                                      "50": "#fafafa",
                                      "500": "#9e9e9e",
                                      "600": "#757575",
                                      "700": "#616161",
                                      "800": "#424242",
                                      "900": "#212121",
                                      "A100": "#d5d5d5",
                                      "A200": "#aaaaaa",
                                      "A400": "#303030",
                                      "A700": "#616161",
                                    },
                                    "primary": Object {
                                      "contrastText": "#fff",
                                      "dark": "#303f9f",
                                      "light": "#7986cb",
                                      "main": "#3f51b5",
                                    },
                                    "secondary": Object {
                                      "contrastText": "#fff",
                                      "dark": "#c51162",
                                      "light": "#ff4081",
                                      "main": "#f50057",
                                    },
                                    "text": Object {
                                      "disabled": "rgba(0, 0, 0, 0.38)",
                                      "hint": "rgba(0, 0, 0, 0.38)",
                                      "primary": "rgba(0, 0, 0, 0.87)",
                                      "secondary": "rgba(0, 0, 0, 0.54)",
                                    },
                                    "tonalOffset": 0.2,
                                    "type": "light",
                                  },
                                  "props": Object {},
                                  "shadows": Array [
                                    "none",
                                    "0px 1px 3px 0px rgba(0, 0, 0, 0.2),0px 1px 1px 0px rgba(0, 0, 0, 0.14),0px 2px 1px -1px rgba(0, 0, 0, 0.12)",
                                    "0px 1px 5px 0px rgba(0, 0, 0, 0.2),0px 2px 2px 0px rgba(0, 0, 0, 0.14),0px 3px 1px -2px rgba(0, 0, 0, 0.12)",
                                    "0px 1px 8px 0px rgba(0, 0, 0, 0.2),0px 3px 4px 0px rgba(0, 0, 0, 0.14),0px 3px 3px -2px rgba(0, 0, 0, 0.12)",
                                    "0px 2px 4px -1px rgba(0, 0, 0, 0.2),0px 4px 5px 0px rgba(0, 0, 0, 0.14),0px 1px 10px 0px rgba(0, 0, 0, 0.12)",
                                    "0px 3px 5px -1px rgba(0, 0, 0, 0.2),0px 5px 8px 0px rgba(0, 0, 0, 0.14),0px 1px 14px 0px rgba(0, 0, 0, 0.12)",
                                    "0px 3px 5px -1px rgba(0, 0, 0, 0.2),0px 6px 10px 0px rgba(0, 0, 0, 0.14),0px 1px 18px 0px rgba(0, 0, 0, 0.12)",
                                    "0px 4px 5px -2px rgba(0, 0, 0, 0.2),0px 7px 10px 1px rgba(0, 0, 0, 0.14),0px 2px 16px 1px rgba(0, 0, 0, 0.12)",
                                    "0px 5px 5px -3px rgba(0, 0, 0, 0.2),0px 8px 10px 1px rgba(0, 0, 0, 0.14),0px 3px 14px 2px rgba(0, 0, 0, 0.12)",
                                    "0px 5px 6px -3px rgba(0, 0, 0, 0.2),0px 9px 12px 1px rgba(0, 0, 0, 0.14),0px 3px 16px 2px rgba(0, 0, 0, 0.12)",
                                    "0px 6px 6px -3px rgba(0, 0, 0, 0.2),0px 10px 14px 1px rgba(0, 0, 0, 0.14),0px 4px 18px 3px rgba(0, 0, 0, 0.12)",
                                    "0px 6px 7px -4px rgba(0, 0, 0, 0.2),0px 11px 15px 1px rgba(0, 0, 0, 0.14),0px 4px 20px 3px rgba(0, 0, 0, 0.12)",
                                    "0px 7px 8px -4px rgba(0, 0, 0, 0.2),0px 12px 17px 2px rgba(0, 0, 0, 0.14),0px 5px 22px 4px rgba(0, 0, 0, 0.12)",
                                    "0px 7px 8px -4px rgba(0, 0, 0, 0.2),0px 13px 19px 2px rgba(0, 0, 0, 0.14),0px 5px 24px 4px rgba(0, 0, 0, 0.12)",
                                    "0px 7px 9px -4px rgba(0, 0, 0, 0.2),0px 14px 21px 2px rgba(0, 0, 0, 0.14),0px 5px 26px 4px rgba(0, 0, 0, 0.12)",
                                    "0px 8px 9px -5px rgba(0, 0, 0, 0.2),0px 15px 22px 2px rgba(0, 0, 0, 0.14),0px 6px 28px 5px rgba(0, 0, 0, 0.12)",
                                    "0px 8px 10px -5px rgba(0, 0, 0, 0.2),0px 16px 24px 2px rgba(0, 0, 0, 0.14),0px 6px 30px 5px rgba(0, 0, 0, 0.12)",
                                    "0px 8px 11px -5px rgba(0, 0, 0, 0.2),0px 17px 26px 2px rgba(0, 0, 0, 0.14),0px 6px 32px 5px rgba(0, 0, 0, 0.12)",
                                    "0px 9px 11px -5px rgba(0, 0, 0, 0.2),0px 18px 28px 2px rgba(0, 0, 0, 0.14),0px 7px 34px 6px rgba(0, 0, 0, 0.12)",
                                    "0px 9px 12px -6px rgba(0, 0, 0, 0.2),0px 19px 29px 2px rgba(0, 0, 0, 0.14),0px 7px 36px 6px rgba(0, 0, 0, 0.12)",
                                    "0px 10px 13px -6px rgba(0, 0, 0, 0.2),0px 20px 31px 3px rgba(0, 0, 0, 0.14),0px 8px 38px 7px rgba(0, 0, 0, 0.12)",
                                    "0px 10px 13px -6px rgba(0, 0, 0, 0.2),0px 21px 33px 3px rgba(0, 0, 0, 0.14),0px 8px 40px 7px rgba(0, 0, 0, 0.12)",
                                    "0px 10px 14px -6px rgba(0, 0, 0, 0.2),0px 22px 35px 3px rgba(0, 0, 0, 0.14),0px 8px 42px 7px rgba(0, 0, 0, 0.12)",
                                    "0px 11px 14px -7px rgba(0, 0, 0, 0.2),0px 23px 36px 3px rgba(0, 0, 0, 0.14),0px 9px 44px 8px rgba(0, 0, 0, 0.12)",
                                    "0px 11px 15px -7px rgba(0, 0, 0, 0.2),0px 24px 38px 3px rgba(0, 0, 0, 0.14),0px 9px 46px 8px rgba(0, 0, 0, 0.12)",
                                  ],
                                  "shape": Object {
                                    "borderRadius": 4,
                                  },
                                  "spacing": Object {
                                    "unit": 8,
                                  },
                                  "transitions": Object {
                                    "create": [Function],
                                    "duration": Object {
                                      "complex": 375,
                                      "enteringScreen": 225,
                                      "leavingScreen": 195,
                                      "short": 250,
                                      "shorter": 200,
                                      "shortest": 150,
                                      "standard": 300,
                                    },
                                    "easing": Object {
                                      "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                      "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                      "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                      "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                    },
                                    "getAutoHeightDuration": [Function],
                                  },
                                  "typography": Object {
                                    "body1": Object {
                                      "color": "rgba(0, 0, 0, 0.87)",
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "0.875rem",
                                      "fontWeight": 400,
                                      "lineHeight": "1.46429em",
                                    },
                                    "body2": Object {
                                      "color": "rgba(0, 0, 0, 0.87)",
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "0.875rem",
                                      "fontWeight": 500,
                                      "lineHeight": "1.71429em",
                                    },
                                    "button": Object {
                                      "color": "rgba(0, 0, 0, 0.87)",
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "0.875rem",
                                      "fontWeight": 500,
                                      "textTransform": "uppercase",
                                    },
                                    "caption": Object {
                                      "color": "rgba(0, 0, 0, 0.54)",
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "0.75rem",
                                      "fontWeight": 400,
                                      "lineHeight": "1.375em",
                                    },
                                    "display1": Object {
                                      "color": "rgba(0, 0, 0, 0.54)",
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "2.125rem",
                                      "fontWeight": 400,
                                      "lineHeight": "1.20588em",
                                    },
                                    "display2": Object {
                                      "color": "rgba(0, 0, 0, 0.54)",
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "2.8125rem",
                                      "fontWeight": 400,
                                      "lineHeight": "1.13333em",
                                      "marginLeft": "-.02em",
                                    },
                                    "display3": Object {
                                      "color": "rgba(0, 0, 0, 0.54)",
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "3.5rem",
                                      "fontWeight": 400,
                                      "letterSpacing": "-.02em",
                                      "lineHeight": "1.30357em",
                                      "marginLeft": "-.02em",
                                    },
                                    "display4": Object {
                                      "color": "rgba(0, 0, 0, 0.54)",
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "7rem",
                                      "fontWeight": 300,
                                      "letterSpacing": "-.04em",
                                      "lineHeight": "1.14286em",
                                      "marginLeft": "-.04em",
                                    },
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": 14,
                                    "fontWeightLight": 300,
                                    "fontWeightMedium": 500,
                                    "fontWeightRegular": 400,
                                    "headline": Object {
                                      "color": "rgba(0, 0, 0, 0.87)",
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "1.5rem",
                                      "fontWeight": 400,
                                      "lineHeight": "1.35417em",
                                    },
                                    "pxToRem": [Function],
                                    "round": [Function],
                                    "subheading": Object {
                                      "color": "rgba(0, 0, 0, 0.87)",
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "1rem",
                                      "fontWeight": 400,
                                      "lineHeight": "1.5em",
                                    },
                                    "title": Object {
                                      "color": "rgba(0, 0, 0, 0.87)",
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "1.3125rem",
                                      "fontWeight": 500,
                                      "lineHeight": "1.16667em",
                                    },
                                  },
                                  "zIndex": Object {
                                    "appBar": 1100,
                                    "drawer": 1200,
                                    "mobileStepper": 1000,
                                    "modal": 1300,
                                    "snackbar": 1400,
                                    "tooltip": 1500,
                                  },
                                }
                              }
                              transitionDuration="auto"
                            >
                              <WithStyles(Popover)
                                PaperProps={
                                  Object {
                                    "classes": Object {
                                      "root": "MuiMenu-paper-123",
                                    },
                                    "style": Object {
                                      "minWidth": null,
                                    },
                                  }
                                }
                                anchorEl={null}
                                anchorOrigin={
                                  Object {
                                    "horizontal": "left",
                                    "vertical": "top",
                                  }
                                }
                                getContentAnchorEl={[Function]}
                                id="menu-units"
                                onClose={[Function]}
                                onEnter={[Function]}
                                open={false}
                                transformOrigin={
                                  Object {
                                    "horizontal": "left",
                                    "vertical": "top",
                                  }
                                }
                                transitionDuration="auto"
                              >
                                <Popover
                                  PaperProps={
                                    Object {
                                      "classes": Object {
                                        "root": "MuiMenu-paper-123",
                                      },
                                      "style": Object {
                                        "minWidth": null,
                                      },
                                    }
                                  }
                                  TransitionComponent={[Function]}
                                  anchorEl={null}
                                  anchorOrigin={
                                    Object {
                                      "horizontal": "left",
                                      "vertical": "top",
                                    }
                                  }
                                  anchorReference="anchorEl"
                                  classes={
                                    Object {
                                      "paper": "MuiPopover-paper-124",
                                    }
                                  }
                                  elevation={8}
                                  getContentAnchorEl={[Function]}
                                  id="menu-units"
                                  marginThreshold={16}
                                  onClose={[Function]}
                                  onEnter={[Function]}
                                  open={false}
                                  transformOrigin={
                                    Object {
                                      "horizontal": "left",
                                      "vertical": "top",
                                    }
                                  }
                                  transitionDuration="auto"
                                >
                                  <WithStyles(Modal)
                                    BackdropProps={
                                      Object {
                                        "invisible": true,
                                      }
                                    }
                                    id="menu-units"
                                    onClose={[Function]}
                                    open={false}
                                  >
                                    <Modal
                                      BackdropComponent={[Function]}
                                      BackdropProps={
                                        Object {
                                          "invisible": true,
                                        }
                                      }
                                      classes={
                                        Object {
                                          "hidden": "MuiModal-hidden-81",
                                          "root": "MuiModal-root-80",
                                        }
                                      }
                                      disableAutoFocus={false}
                                      disableBackdropClick={false}
                                      disableEnforceFocus={false}
                                      disableEscapeKeyDown={false}
                                      disablePortal={false}
                                      disableRestoreFocus={false}
                                      hideBackdrop={false}
                                      id="menu-units"
                                      keepMounted={false}
                                      manager={
                                        ModalManager {
                                          "containers": Array [],
                                          "data": Array [],
                                          "handleContainerOverflow": true,
                                          "hideSiblingNodes": true,
                                          "modals": Array [],
                                        }
                                      }
                                      onClose={[Function]}
                                      open={false}
                                    />
                                  </WithStyles(Modal)>
                                </Popover>
                              </WithStyles(Popover)>
                            </Menu>
                          </WithStyles(Menu)>
                        </div>
                      </SelectInput>
                    </div>
                  </Input>
                </WithStyles(Input)>
              </Select>
            </WithStyles(Select)>
          </div>
        </FormControl>
      </WithStyles(FormControl)>
      <TextField
        id="units"
        label="Units"
        margin="normal"
        onChange={[Function]}
        required={true}
        select={false}
        style={
          Object {
            "marginBotton": 0,
            "marginRight": 10,
            "marginTop": 0,
            "width": "20%",
          }
        }
        type="number"
        value=""
      >
        <WithStyles(FormControl)
          margin="normal"
          required={true}
          style={
            Object {
              "marginBotton": 0,
              "marginRight": 10,
              "marginTop": 0,
              "width": "20%",
            }
          }
        >
          <FormControl
            classes={
              Object {
                "fullWidth": "MuiFormControl-fullWidth-85",
                "marginDense": "MuiFormControl-marginDense-84",
                "marginNormal": "MuiFormControl-marginNormal-83",
                "root": "MuiFormControl-root-82",
              }
            }
            component="div"
            disabled={false}
            error={false}
            fullWidth={false}
            margin="normal"
            required={true}
            style={
              Object {
                "marginBotton": 0,
                "marginRight": 10,
                "marginTop": 0,
                "width": "20%",
              }
            }
          >
            <div
              className="MuiFormControl-root-82 MuiFormControl-marginNormal-83"
              style={
                Object {
                  "marginBotton": 0,
                  "marginRight": 10,
                  "marginTop": 0,
                  "width": "20%",
                }
              }
            >
              <WithStyles(InputLabel)
                htmlFor="units"
              >
                <InputLabel
                  classes={
                    Object {
                      "animated": "MuiInputLabel-animated-90",
                      "formControl": "MuiInputLabel-formControl-87",
                      "marginDense": "MuiInputLabel-marginDense-88",
                      "root": "MuiInputLabel-root-86",
                      "shrink": "MuiInputLabel-shrink-89",
                    }
                  }
                  disableAnimation={false}
                  htmlFor="units"
                >
                  <WithStyles(FormLabel)
                    className="MuiInputLabel-root-86 MuiInputLabel-formControl-87 MuiInputLabel-animated-90"
                    data-shrink={false}
                    htmlFor="units"
                  >
                    <FormLabel
                      className="MuiInputLabel-root-86 MuiInputLabel-formControl-87 MuiInputLabel-animated-90"
                      classes={
                        Object {
                          "asterisk": "MuiFormLabel-asterisk-97",
                          "disabled": "MuiFormLabel-disabled-93",
                          "error": "MuiFormLabel-error-94",
                          "filled": "MuiFormLabel-filled-95",
                          "focused": "MuiFormLabel-focused-92",
                          "required": "MuiFormLabel-required-96",
                          "root": "MuiFormLabel-root-91",
                        }
                      }
                      component="label"
                      data-shrink={false}
                      htmlFor="units"
                    >
                      <label
                        className="MuiFormLabel-root-91 MuiFormLabel-required-96 MuiInputLabel-root-86 MuiInputLabel-formControl-87 MuiInputLabel-animated-90"
                        data-shrink={false}
                        htmlFor="units"
                      >
                        Units
                        <span
                          className="MuiFormLabel-asterisk-97"
                        >
                          â€‰*
                        </span>
                      </label>
                    </FormLabel>
                  </WithStyles(FormLabel)>
                </InputLabel>
              </WithStyles(InputLabel)>
              <WithStyles(Input)
                id="units"
                onChange={[Function]}
                type="number"
                value=""
              >
                <Input
                  classes={
                    Object {
                      "disabled": "MuiInput-disabled-106",
                      "error": "MuiInput-error-108",
                      "focused": "MuiInput-focused-105",
                      "formControl": "MuiInput-formControl-104",
                      "fullWidth": "MuiInput-fullWidth-110",
                      "input": "MuiInput-input-111",
                      "inputMarginDense": "MuiInput-inputMarginDense-112",
                      "inputMultiline": "MuiInput-inputMultiline-113",
                      "inputType": "MuiInput-inputType-114",
                      "inputTypeSearch": "MuiInput-inputTypeSearch-115",
                      "multiline": "MuiInput-multiline-109",
                      "root": "MuiInput-root-103",
                      "underline": "MuiInput-underline-107",
                    }
                  }
                  disableUnderline={false}
                  fullWidth={false}
                  id="units"
                  multiline={false}
                  onChange={[Function]}
                  type="number"
                  value=""
                >
                  <div
                    className="MuiInput-root-103 MuiInput-formControl-104 MuiInput-underline-107"
                  >
                    <input
                      aria-invalid={false}
                      className="MuiInput-input-111 MuiInput-inputType-114"
                      disabled={false}
                      id="units"
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      required={true}
                      type="number"
                      value=""
                    />
                  </div>
                </Input>
              </WithStyles(Input)>
            </div>
          </FormControl>
        </WithStyles(FormControl)>
      </TextField>
      <WithStyles(Button)
        color="primary"
        onClick={[Function]}
        variant="contained"
      >
        <Button
          classes={
            Object {
              "colorInherit": "MuiButton-colorInherit-65",
              "contained": "MuiButton-contained-55",
              "containedPrimary": "MuiButton-containedPrimary-56",
              "containedSecondary": "MuiButton-containedSecondary-57",
              "disabled": "MuiButton-disabled-64",
              "extendedFab": "MuiButton-extendedFab-62",
              "fab": "MuiButton-fab-61",
              "flat": "MuiButton-flat-49",
              "flatPrimary": "MuiButton-flatPrimary-50",
              "flatSecondary": "MuiButton-flatSecondary-51",
              "focusVisible": "MuiButton-focusVisible-63",
              "fullWidth": "MuiButton-fullWidth-69",
              "label": "MuiButton-label-45",
              "mini": "MuiButton-mini-66",
              "outlined": "MuiButton-outlined-52",
              "outlinedPrimary": "MuiButton-outlinedPrimary-53",
              "outlinedSecondary": "MuiButton-outlinedSecondary-54",
              "raised": "MuiButton-raised-58",
              "raisedPrimary": "MuiButton-raisedPrimary-59",
              "raisedSecondary": "MuiButton-raisedSecondary-60",
              "root": "MuiButton-root-44",
              "sizeLarge": "MuiButton-sizeLarge-68",
              "sizeSmall": "MuiButton-sizeSmall-67",
              "text": "MuiButton-text-46",
              "textPrimary": "MuiButton-textPrimary-47",
              "textSecondary": "MuiButton-textSecondary-48",
            }
          }
          color="primary"
          component="button"
          disableFocusRipple={false}
          disabled={false}
          fullWidth={false}
          mini={false}
          onClick={[Function]}
          size="medium"
          type="button"
          variant="contained"
        >
          <WithStyles(ButtonBase)
            className="MuiButton-root-44 MuiButton-contained-55 MuiButton-containedPrimary-56 MuiButton-raised-58 MuiButton-raisedPrimary-59"
            component="button"
            disabled={false}
            focusRipple={true}
            focusVisibleClassName="MuiButton-focusVisible-63"
            onClick={[Function]}
            type="button"
          >
            <ButtonBase
              centerRipple={false}
              className="MuiButton-root-44 MuiButton-contained-55 MuiButton-containedPrimary-56 MuiButton-raised-58 MuiButton-raisedPrimary-59"
              classes={
                Object {
                  "disabled": "MuiButtonBase-disabled-71",
                  "focusVisible": "MuiButtonBase-focusVisible-72",
                  "root": "MuiButtonBase-root-70",
                }
              }
              component="button"
              disableRipple={false}
              disableTouchRipple={false}
              disabled={false}
              focusRipple={true}
              focusVisibleClassName="MuiButton-focusVisible-63"
              onClick={[Function]}
              tabIndex="0"
              type="button"
            >
              <button
                className="MuiButtonBase-root-70 MuiButton-root-44 MuiButton-contained-55 MuiButton-containedPrimary-56 MuiButton-raised-58 MuiButton-raisedPrimary-59"
                disabled={false}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onMouseDown={[Function]}
                onMouseLeave={[Function]}
                onMouseUp={[Function]}
                onTouchEnd={[Function]}
                onTouchMove={[Function]}
                onTouchStart={[Function]}
                tabIndex="0"
                type="button"
              >
                <span
                  className="MuiButton-label-45"
                >
                  Add
                </span>
                <WithStyles(TouchRipple)
                  center={false}
                  innerRef={[Function]}
                >
                  <TouchRipple
                    center={false}
                    classes={
                      Object {
                        "child": "MuiTouchRipple-child-77",
                        "childLeaving": "MuiTouchRipple-childLeaving-78",
                        "childPulsate": "MuiTouchRipple-childPulsate-79",
                        "ripple": "MuiTouchRipple-ripple-74",
                        "ripplePulsate": "MuiTouchRipple-ripplePulsate-76",
                        "rippleVisible": "MuiTouchRipple-rippleVisible-75",
                        "root": "MuiTouchRipple-root-73",
                      }
                    }
                  >
                    <TransitionGroup
                      childFactory={[Function]}
                      className="MuiTouchRipple-root-73"
                      component="span"
                      enter={true}
                      exit={true}
                    >
                      <span
                        className="MuiTouchRipple-root-73"
                      />
                    </TransitionGroup>
                  </TouchRipple>
                </WithStyles(TouchRipple)>
              </button>
            </ButtonBase>
          </WithStyles(ButtonBase)>
        </Button>
      </WithStyles(Button)>
    </div>
  </div>
</AddUnits>
`;

exports[`CreateMachine should match snapshot 1`] = `
<CreateMachine
  createNewMachine={[Function]}
  handleChange={[Function]}
  handleModalClose={[Function]}
  handleOpen={[Function]}
  machines={
    Object {
      "IDX11111": Object {
        "average": 0,
        "name": "Jhon",
        "numAdded": 0,
        "temperature": 0,
        "units": 0,
      },
      "IDX12345": Object {
        "average": 13,
        "name": "Karam",
        "numAdded": 1,
        "temperature": 13,
        "units": 13,
      },
      "IDX2222": Object {
        "average": 0,
        "name": "Vemly",
        "numAdded": 0,
        "temperature": 0,
        "units": 0,
      },
    }
  }
  open={false}
>
  <div>
    <div>
      <WithStyles(Button)
        color="primary"
        id="addUser"
        onClick={[Function]}
        variant="contained"
      >
        <Button
          classes={
            Object {
              "colorInherit": "MuiButton-colorInherit-65",
              "contained": "MuiButton-contained-55",
              "containedPrimary": "MuiButton-containedPrimary-56",
              "containedSecondary": "MuiButton-containedSecondary-57",
              "disabled": "MuiButton-disabled-64",
              "extendedFab": "MuiButton-extendedFab-62",
              "fab": "MuiButton-fab-61",
              "flat": "MuiButton-flat-49",
              "flatPrimary": "MuiButton-flatPrimary-50",
              "flatSecondary": "MuiButton-flatSecondary-51",
              "focusVisible": "MuiButton-focusVisible-63",
              "fullWidth": "MuiButton-fullWidth-69",
              "label": "MuiButton-label-45",
              "mini": "MuiButton-mini-66",
              "outlined": "MuiButton-outlined-52",
              "outlinedPrimary": "MuiButton-outlinedPrimary-53",
              "outlinedSecondary": "MuiButton-outlinedSecondary-54",
              "raised": "MuiButton-raised-58",
              "raisedPrimary": "MuiButton-raisedPrimary-59",
              "raisedSecondary": "MuiButton-raisedSecondary-60",
              "root": "MuiButton-root-44",
              "sizeLarge": "MuiButton-sizeLarge-68",
              "sizeSmall": "MuiButton-sizeSmall-67",
              "text": "MuiButton-text-46",
              "textPrimary": "MuiButton-textPrimary-47",
              "textSecondary": "MuiButton-textSecondary-48",
            }
          }
          color="primary"
          component="button"
          disableFocusRipple={false}
          disabled={false}
          fullWidth={false}
          id="addUser"
          mini={false}
          onClick={[Function]}
          size="medium"
          type="button"
          variant="contained"
        >
          <WithStyles(ButtonBase)
            className="MuiButton-root-44 MuiButton-contained-55 MuiButton-containedPrimary-56 MuiButton-raised-58 MuiButton-raisedPrimary-59"
            component="button"
            disabled={false}
            focusRipple={true}
            focusVisibleClassName="MuiButton-focusVisible-63"
            id="addUser"
            onClick={[Function]}
            type="button"
          >
            <ButtonBase
              centerRipple={false}
              className="MuiButton-root-44 MuiButton-contained-55 MuiButton-containedPrimary-56 MuiButton-raised-58 MuiButton-raisedPrimary-59"
              classes={
                Object {
                  "disabled": "MuiButtonBase-disabled-71",
                  "focusVisible": "MuiButtonBase-focusVisible-72",
                  "root": "MuiButtonBase-root-70",
                }
              }
              component="button"
              disableRipple={false}
              disableTouchRipple={false}
              disabled={false}
              focusRipple={true}
              focusVisibleClassName="MuiButton-focusVisible-63"
              id="addUser"
              onClick={[Function]}
              tabIndex="0"
              type="button"
            >
              <button
                className="MuiButtonBase-root-70 MuiButton-root-44 MuiButton-contained-55 MuiButton-containedPrimary-56 MuiButton-raised-58 MuiButton-raisedPrimary-59"
                disabled={false}
                id="addUser"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onMouseDown={[Function]}
                onMouseLeave={[Function]}
                onMouseUp={[Function]}
                onTouchEnd={[Function]}
                onTouchMove={[Function]}
                onTouchStart={[Function]}
                tabIndex="0"
                type="button"
              >
                <span
                  className="MuiButton-label-45"
                >
                  Add User
                </span>
                <WithStyles(TouchRipple)
                  center={false}
                  innerRef={[Function]}
                >
                  <TouchRipple
                    center={false}
                    classes={
                      Object {
                        "child": "MuiTouchRipple-child-77",
                        "childLeaving": "MuiTouchRipple-childLeaving-78",
                        "childPulsate": "MuiTouchRipple-childPulsate-79",
                        "ripple": "MuiTouchRipple-ripple-74",
                        "ripplePulsate": "MuiTouchRipple-ripplePulsate-76",
                        "rippleVisible": "MuiTouchRipple-rippleVisible-75",
                        "root": "MuiTouchRipple-root-73",
                      }
                    }
                  >
                    <TransitionGroup
                      childFactory={[Function]}
                      className="MuiTouchRipple-root-73"
                      component="span"
                      enter={true}
                      exit={true}
                    >
                      <span
                        className="MuiTouchRipple-root-73"
                      />
                    </TransitionGroup>
                  </TouchRipple>
                </WithStyles(TouchRipple)>
              </button>
            </ButtonBase>
          </WithStyles(ButtonBase)>
        </Button>
      </WithStyles(Button)>
    </div>
    <WithStyles(Modal)
      aria-describedby="simple-modal-description"
      aria-labelledby="simple-modal-title"
      id="addModal"
      onClose={[Function]}
      open={false}
    >
      <Modal
        BackdropComponent={[Function]}
        aria-describedby="simple-modal-description"
        aria-labelledby="simple-modal-title"
        classes={
          Object {
            "hidden": "MuiModal-hidden-81",
            "root": "MuiModal-root-80",
          }
        }
        disableAutoFocus={false}
        disableBackdropClick={false}
        disableEnforceFocus={false}
        disableEscapeKeyDown={false}
        disablePortal={false}
        disableRestoreFocus={false}
        hideBackdrop={false}
        id="addModal"
        keepMounted={false}
        manager={
          ModalManager {
            "containers": Array [],
            "data": Array [],
            "handleContainerOverflow": true,
            "hideSiblingNodes": true,
            "modals": Array [],
          }
        }
        onClose={[Function]}
        open={false}
      />
    </WithStyles(Modal)>
  </div>
</CreateMachine>
`;

exports[`Table should match snapshot 1`] = `
<div>
  <div
    class="MuiPaper-root-1 MuiPaper-elevation2-5 MuiPaper-rounded-2"
    style="width:100%;margin-top:10px;overflow-x:auto"
  >
    <table
      class="MuiTable-root-28"
      style="min-width:700px"
    >
      <thead
        class="MuiTableHead-root-29"
      >
        <tr
          class="MuiTableRow-root-30 MuiTableRow-head-33"
        >
          <th
            class="MuiTableCell-root-35 MuiTableCell-head-36"
            scope="col"
          >
            Name
          </th>
          <th
            class="MuiTableCell-root-35 MuiTableCell-head-36"
            scope="col"
          >
            ID
          </th>
          <th
            class="MuiTableCell-root-35 MuiTableCell-head-36"
            scope="col"
          >
            Temperature
          </th>
          <th
            class="MuiTableCell-root-35 MuiTableCell-head-36"
            scope="col"
          >
            Units
          </th>
          <th
            class="MuiTableCell-root-35 MuiTableCell-head-36"
            scope="col"
          >
            Average
          </th>
        </tr>
      </thead>
      <tbody
        class="MuiTableBody-root-43"
      >
        <tr
          class="MuiTableRow-root-30"
        >
          <td
            class="MuiTableCell-root-35 MuiTableCell-body-37"
          >
            Karam
          </td>
          <td
            class="MuiTableCell-root-35 MuiTableCell-body-37"
          >
            IDX12345
          </td>
          <td
            class="MuiTableCell-root-35 MuiTableCell-body-37"
          >
            0
          </td>
          <td
            class="MuiTableCell-root-35 MuiTableCell-body-37"
          >
            0
          </td>
          <td
            class="MuiTableCell-root-35 MuiTableCell-body-37"
          >
            0
          </td>
        </tr>
        <tr
          class="MuiTableRow-root-30"
        >
          <td
            class="MuiTableCell-root-35 MuiTableCell-body-37"
          >
            Jhon
          </td>
          <td
            class="MuiTableCell-root-35 MuiTableCell-body-37"
          >
            IDX11111
          </td>
          <td
            class="MuiTableCell-root-35 MuiTableCell-body-37"
          >
            0
          </td>
          <td
            class="MuiTableCell-root-35 MuiTableCell-body-37"
          >
            0
          </td>
          <td
            class="MuiTableCell-root-35 MuiTableCell-body-37"
          >
            0
          </td>
        </tr>
        <tr
          class="MuiTableRow-root-30"
        >
          <td
            class="MuiTableCell-root-35 MuiTableCell-body-37"
          >
            Vemly
          </td>
          <td
            class="MuiTableCell-root-35 MuiTableCell-body-37"
          >
            IDX2222
          </td>
          <td
            class="MuiTableCell-root-35 MuiTableCell-body-37"
          >
            0
          </td>
          <td
            class="MuiTableCell-root-35 MuiTableCell-body-37"
          >
            0
          </td>
          <td
            class="MuiTableCell-root-35 MuiTableCell-body-37"
          >
            0
          </td>
        </tr>
      </tbody>
    </table>
  </div>
</div>
`;
